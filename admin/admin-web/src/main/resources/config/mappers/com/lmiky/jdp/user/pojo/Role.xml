<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lmiky.jdp.user.pojo.Role">
	<resultMap type="Role" id="role" extends="com.lmiky.jdp.database.pojo.BasePojo.basePojo">
		<result column="name" property="name" />
	</resultMap>
	<sql id="tableName">
		t_role
	</sql>
	<sql id="tableAlias">
		Role
	</sql>
	<sql id="joinOperator">
		<if test="hasJoin and joinTableAlias.contains('Operator')">
     		join t_user_role ur on Role.id = ur.roleId join <include refid="com.lmiky.jdp.user.pojo.Operator.tableName"/> Operator on Operator.id = ur.userId
     	</if>
	</sql>
	
	<select id="find" resultMap="role">
		select * from <include refid="tableName"/> <include refid="tableAlias"/>
		<trim prefix="where">
			<include refid="common.aliasPropertiesCondition"/>
		</trim>
	</select>
	
	<!-- 获取操作员所属的角色列表 -->
	<select id="listByOperate" resultMap="role">
		select r.* from <include refid="tableName"/> r, t_user_role ur
		where ur.userId = #{id} AND r.id = ur.roleId
	</select>
	
	 <insert id="add" parameterType="Role" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into
		<include refid="tableName" />
		(id, name) values(#{id}, #{name})
	</insert>
	 
	 <update id="update" parameterType="Role">
		update <include refid="tableName" /> 
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null">name=#{name}</if>
		</trim>
		where id=#{id}
	</update>
	 
	 <select id="list" resultMap="role">
		select <include refid="tableAlias"/>.* from <include refid="tableName"/> <include refid="tableAlias"/>
		<include refid="joinOperator"/>
		<trim prefix="where">
			<include refid="common.aliasPropertiesCondition"/>
		</trim>
		<include refid="common.sortCondition"/>
		<include refid="common.pageCondition"/>
	</select>
	
	<!-- 获取指定用户所为拥有的角色 -->
	<select id="listNoUserRoles" resultMap="role">
		select * from <include refid="tableName"/> r
		where not exists (select 1 from t_user_role ur where ur.userId = #{userId} and ur.roleId = r.id) order by r.name asc
	</select>
</mapper>