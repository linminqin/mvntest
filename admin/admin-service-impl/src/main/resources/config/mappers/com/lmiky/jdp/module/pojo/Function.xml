<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lmiky.jdp.module.pojo.Function">
	<resultMap type="Function" id="function" extends="com.lmiky.jdp.sort.pojo.BaseSortPojo.baseSortPojo">
		<result column="name" property="name"/>
		<result column="authorityCode" property="authorityCode"/>
		<association property="module" column="moduleId" select="com.lmiky.jdp.module.pojo.Module.findById"/>
	</resultMap>

	<sql id="tableName">
		t_function
	</sql>
	<sql id="tableAlias">
		Function
	</sql>
	<sql id="joinModule">
		<choose>
			<when test="hasJoin and joinTableAlias.contains('ModuleGroup')">
	     		join <include refid="com.lmiky.jdp.module.pojo.Module.tableName"/> Module on Module.id = <include refid="tableAlias" />.moduleId
	     		join <include refid="com.lmiky.jdp.module.pojo.ModuleGroup.tableName"/> ModuleGroup on ModuleGroup.id = Module.groupId
	     	</when>
			<when test="hasJoin and joinTableAlias.contains('Module')">
	     		join <include refid="com.lmiky.jdp.module.pojo.Module.tableName"/> Module on Module.id = <include refid="tableAlias" />.moduleId
	     	</when>
     	</choose>
	</sql>

	<select id="find" resultMap="function">
		select * from 
		<include refid="tableName"/> <include refid="tableAlias" />
		<trim prefix="where">
			<include refid="common.aliasPropertiesCondition"/>
		</trim>
	</select>
	
	<select id="list" resultMap="function">
		select * from
		<include refid="tableName" /> <include refid="tableAlias" />
		<include refid="joinModule" />
		<trim prefix="where">
			<include refid="common.aliasPropertiesCondition" />
		</trim>
		<include refid="common.sortCondition" />
		<include refid="common.pageCondition" />
	</select>

	<insert id="add" parameterType="Function" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into
		<include refid="tableName" />
		(
			 id
			,name
			,moduleId
			,authorityCode
			,sort
		)
		values
		(
			 #{id}
			,#{name}
			,#{module.id}
			,#{authorityCode}
			,#{sort}
		)
	</insert>
	
	<update id="update" parameterType="Function">
		update <include refid="tableName" /> 
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null">name=#{name},</if>
			<if test="module != null and module.id != null">moduleId=#{module.id},</if>
			<if test="authorityCode != null">authorityCode=#{authorityCode},</if>
			<if test="sort != null">sort=#{sort},</if>
		</trim>
		where id=#{id}
	</update>
</mapper>